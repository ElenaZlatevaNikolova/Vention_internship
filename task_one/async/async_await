// Only async/await

// Prepare ice cream 
// 1. Place order and choose fruit - 2 sec.
// 2. Cut the fruits - 2 sec.
// 3. Add liquids - 1 sec.
// 4. Start the machine - 1 sec.
// 5. Choose container - 2 sec.
// 6. Choose topping - 3 sec.
// 7. Serve ice aream - 4 sec.


let stocks = {
    Fruits: ['banana', 'strawberry', 'bluberry', 'cherry'],
    Liquids: ['milk', 'cream', 'water'],
    Containers: ['cup', 'cone', 'stick'],
    Topping: ['chocolate', 'syrup'],
};

let is_shop_open = false;

function time(ms) {
    return new Promise((resolve, reject) => {
        if (is_shop_open) {
            setTimeout(() => resolve(), ms);
        }
        else {
            reject();
        }
    })
}

async function kitchen() {
    try {
        await time(2000);
        console.log(`${stocks.Fruits[0]} has been chosen. Production has started`);

        await time(2000);
        console.log(`The ${stocks.Fruits[0]} has been cut.`)

        await time(1000);
        console.log(`${stocks.Liquids[1]} has been added`);

        await time(1000);
        console.log('The machine has been started.');

        await time(2000);
        console.log(`The ${stocks.Containers[0]} has been chosen for a container`);

        await time(3000);
        console.log(`${stocks.Topping[1]} has been chosen for topping.`);

        await time(4000);
        console.log('The ice sream has been served!');
    }
    catch (error) {
        console.log('Customer left.');
    }
    finally {
        console.log('Day ended. The shop is closed.');
    }
}

kitchen();

